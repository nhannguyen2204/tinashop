@using TinaShopV2.Common;
@using TinaShopV2.Common.Extensions;

@model TinaShopV2.Models.ProductFilterIndexViewModel

<h2 class="with-sorting">Sản phẩm</h2>
<div class="sorting text-right">
    @{
        bool dateSorted = Model.IsOrderDatetimeDesc != 0;
        bool priceSorted = Model.IsOrderPriceDesc != 0;

        TinaShopV2.Models.ProductFilterIndexViewModel dateModel = new TinaShopV2.Models.ProductFilterIndexViewModel(Model);
        TinaShopV2.Models.ProductFilterIndexViewModel priceModel = new TinaShopV2.Models.ProductFilterIndexViewModel(Model);

        dateModel.IsOrderDatetimeDesc = dateSorted ? 0 : 1;
        priceModel.IsOrderPriceDesc = priceSorted ? 0 : 1;
    }

    <a data-url="@Url.GetUrlByModel(dateModel)" href="@Url.GetUrlByModel(dateModel)" class="product-price-filter-action @(dateSorted ? "sorted" : string.Empty)">Sắp xếp theo Ngày</a>
    <a data-url="@Url.GetUrlByModel(priceModel)" href="@Url.GetUrlByModel(priceModel)" class="product-price-filter-action @(priceSorted ? "sorted" : string.Empty)">Sắp xếp theo GIÁ</a>
</div>
@*</div>*@

<div class="row">

    <!--Filters-->
    <div class="filters-mobile col-lg-3 col-md-3 col-sm-4">
        <div class="shop-filters">

            <!--Price Section-->
            @Html.Action("PriceFilter", "Products", Model)
            @*
                <!--Colors Section-->
                @Html.Action("ColorListing", "Products", Model)
            *@
            <!--Categories Section-->
            @Html.Action("CategoryListing", "Products", Model)

            <!--Brands Section-->
            @Html.Action("BrandListing", "Products", Model)

        </div>
    </div>

    <!--Tiles-->
    <div class="col-lg-9 col-md-9 col-sm-8">
        <div class="row" id="product-tiles">

            @foreach (var item in Model.Products)
            {
                string name = string.Format("{0} - {1}", @item.ProductCode, @item.ProductName);
                string fullname = name;
                int maxLength = 22;
                if (name.Length > maxLength)
                {
                    name = name.Substring(0, maxLength) + "...";
                }


                <div class="col-lg-4 col-md-6 col-sm-12">
                    <div class="tile">
                        <div class="price-label">@item.Price.ToString("0,000") VND</div>
                        @*<div class="price-label old-price">920,00 $</div>*@
                        <a title="@fullname" href="@Url.Action("Details", "Products", new { @Area = "" , @ProductCode = item.ProductCode })" class="product-tile-container">
                            @{
                string imageName = string.Empty;
                var image = item.Medias.OrderBy(m => m.Name).FirstOrDefault();
                if (image == null)
                {
                    var owinContext = Context.GetOwinContext();
                    var noImage = GlobalObjects.Get_Media_NoImage(owinContext);
                    imageName = noImage.ThumbPath;
                }
                else
                {
                    imageName = image.ThumbPath;
                }
                            }

                            <img title="@fullname" src="@(Path.Combine(GlobalObjects.MediaImageFolderPath, imageName))" alt="1" />
                            <span class="tile-overlay"></span>
                        </a>
                        <div class="footer">
                            <a title="@fullname" href="@Url.Action("Details", "Products", new { @Area = "" , @ProductCode = item.ProductCode })">@name</a>
                            <span>@item.Brand.Name</span>
                            @*<button class="btn btn-primary">Add to Cart</button>*@
                        </div>
                    </div>
                </div>
            }

        </div>

        @Html.ProductListingFOPager(Model)

    </div>

</div>



