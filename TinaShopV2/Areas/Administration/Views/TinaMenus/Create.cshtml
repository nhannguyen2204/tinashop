@using TinaShopV2.Common;
@using TinaShopV2.Common.Extensions;

@model TinaShopV2.Areas.Administration.Models.TinaMenu.TinaMenuViewModel

@{
    ViewBag.Title = string.Format(GlobalObjects.TitleFormat, Resources.Commons.Create, Resources.Commons.TinaMenu);
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}
@Html.SmartValidationSummary()
<h2>@Resources.Commons.Create</h2>
@using (Html.BeginForm(ViewContext.LocalizeRouteValues()))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>@Resources.Commons.TinaMenu</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.MenuTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.SmartDropDownListFor(model => model.MenuTypeId, ViewBag.MenuTypes as IEnumerable<SelectListItem>, new { @disabled = "disabled" }, false)
                @Html.ValidationMessageFor(model => model.MenuTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TinaMenuDropdownListFor(model => model.ParentId, m => m.MenuTypeId, null, true, false)
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CssClass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CssClass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CssClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.SmartDropDownListFor(model => model.ActionId, ViewBag.Actions as IEnumerable<SelectListItem>, null, true)
                @Html.ValidationMessageFor(model => model.ActionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsHidden, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.SmartCheckboxFor(model => model.IsHidden)
                @Html.ValidationMessageFor(model => model.IsHidden, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.SmartSpinner(model => model.OrderNumber)
            </div>
            <div class="col-md-2" style="clear:both;"></div>
            <div class="col-md-8">
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="form-actions no-color">
        <input type="submit" value="@Resources.Commons.Save" class="btn btn-default" /> |
        @Html.ActionLink(Resources.Commons.BackToList, "Index", ViewContext.LocalizeRouteValues())
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CustomValidation")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#OrderNumber").spinner();
        });
    </script>
}
